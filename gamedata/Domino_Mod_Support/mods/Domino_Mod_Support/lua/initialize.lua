
--[[

**DO NOT EDIT THIS FILE**

--]]

LOG("*AI DEBUG Initializing Domino Mod Support")

local file_paths = {
	abilities = '/customize/abilities/abilities.lua',
	description = '/customize/description/description.lua',
	enhancement_slots = '/customize/enhancement_slots/enhancement_slots.lua',
	layouts = '/customize/layouts/layouts.lua',
	loc = '/customize/loc/loc.lua',
	skins = '/customize/skins/skins.lua',
	toggles = '/customize/toggles/toggles.lua',
	tooltips = '/customize/tooltips/tooltips.lua',
	multi = '/customize/mfd/mfd.lua',
	modinfo = '/mod_info.lua',
}

__DMod_ModLocations = {}
__DModTextures = {}
__DModFileNamePath = {}
__DModBadTextures = {}
__Dmod_TabFiles = {}
__Dmod_TechFiles = {}
__Dmod_ConstructionTabs = {}
__DMod_EnhancementPrefixes = {}
__DMod_DefaultTabOrder = {}
__DMod_SlotToIconName = {}
__DMod_EnhancementTooltips = {}
__DMod_EnhancementSlotNames = {}
__DMod_SlotNames = {}
__DMod_NestedTabKey = {}
__DMod_Custom_Tooltips = {}
__DMod_LocLookUp = { DE = {}, ES = {}, FR = {}, IT = {}, US = {} }
__DMod_Custom_Descriptions = {}
__DMod_Custom_Toggles = {}
__DMod_Custom_Abilities = {}
__DMod_Custom_Layouts = {}
__DMod_Custom_Skins = {}
__DMod_Custom_LayoutNames = {}
__DMod_Custom_Mfd = {}
__DModVideoPaths = {}

local MODUID = false

-------------------------------------------------------------------------------------------------

function Populate_All_DMod_Tables()

    LOG("*AI DEBUG Populate Domino Mod Tables")

	Populate_Custom_LayoutNames()
	Populate_ActiveModLocations()
	Populate_DefaultVideos()

	Populate_Textures()
	Populate_Videos()

	Populate_TabFiles()	
	Populate_TechFiles()
	populate_ConstructionTabs()
	
	Populate_EnhancementPrefixes()
	Populate_DefaultTabOrder()
	Populate_SlotToIconName()
	Populate_EnhancementTooltips()
	Populate_EnhancementSlotNames()
	
	populate_NestedTabKey()
	
	Populate_Custom_Tooltips()
	Populate_LocLookUp()
	Populate_Custom_UnitDescriptions()
	
	Populate_Custom_Skins()
	
	Populate_Custom_Mfd()

	Populate_User_Tables()
end

function Refresh_All_DMod_Tables()

	Reset_All_DMod_Tables()

	Populate_Custom_LayoutNames()
	Populate_ActiveModLocations()
	Populate_DefaultVideos()

	Populate_Textures()
	Populate_Videos()
		
	Populate_TabFiles()	
	Populate_TechFiles()
	populate_ConstructionTabs()
	
	Populate_EnhancementPrefixes()
	Populate_DefaultTabOrder()
	Populate_SlotToIconName()
	Populate_EnhancementTooltips()
	Populate_EnhancementSlotNames()
	
	populate_NestedTabKey()
	
	Populate_Custom_Tooltips()
	Populate_LocLookUp()
	Populate_Custom_UnitDescriptions()
	
	Populate_DefaultSlotNames()
	
	Populate_Custom_Mfd()
	
	Populate_User_Tables()
end

function Reset_All_DMod_Tables()
	__DMod_ModLocations = {}
	__DModTextures = {}
	__DModBadTextures = {}
	__DModFileNamePath = {}
	__Dmod_TabFiles = {}
	__Dmod_TechFiles = {}
	__Dmod_ConstructionTabs = {}
	__DMod_EnhancementPrefixes = {}
	__DMod_DefaultTabOrder = {}
	__DMod_SlotToIconName = {}
	__DMod_EnhancementTooltips = {}
	__DMod_EnhancementSlotNames = {}
	__DMod_SlotNames = {}
	__DMod_NestedTabKey = {}
	__DMod_Custom_Tooltips = {}
	__DMod_LocLookUp = { DE = {}, ES = {}, FR = {}, IT = {}, US = {} }
	__DMod_Custom_Descriptions = {}
	__DMod_Custom_Toggles = {}
	__DMod_Custom_Abilities = {}
	__DMod_Custom_Layouts = {}
	__DMod_Custom_Skins = {}
	__DMod_Custom_LayoutNames = {}
	__DMod_Custom_Mfd = {}
	__DModVideoPaths = {}
end

function Populate_User_Tables()

	for i,m in __DMod_ModLocations do
	
		local New_Abilities = false
		local New_Descriptions = false
		local New_Slots = false
		local New_Layouts = false
		local New_Locs = false
		local New_Skins = false
		local New_Toggles = false
		local New_Tooltips = false
		local New_Mfds = false
				
		for file, path in file_paths do
			local Modfile = path
		
			if DiskGetFileInfo(m..Modfile) then	
			
				if file == 'abilities' then 
					local Abilities = import(m..Modfile).Abilities					
					if Abilities and table.getsize(Abilities) > 0 then 
						New_Abilities = Abilities
					end
				end
			
				if file == 'description' then 
					local Description = import(m..Modfile).Description
					
					if Description and table.getsize(Description) > 0 then 
						New_Descriptions = Description
					end
				end
		
				if file == 'enhancement_slots' then 
					local Slots = import(m..Modfile).Enhancement_Slots
					
					if Slots and table.getsize(Slots) > 0 then 
						New_Slots = Slots
					end
				end
				
				if file == 'layouts' then 
					local Layouts = import(m..Modfile).Layouts
					
					if Layouts and table.getsize(Layouts) > 0 then 
						New_Layouts = Layouts 
					end
				end
				
				if file == 'loc' then 
					local Loc = import(m..Modfile).Loc
					
					if Loc and table.getsize(Loc) > 0 then 
						New_Locs = Loc 
					end
				end
				
				if file == 'skins' then 
					local Skins = import(m..Modfile).Skins
					
					if Skins and table.getsize(Skins) > 0 then 
						New_Skins = Skins 
					end
				end
				
				if file == 'toggles' then 

					local Toggles = import(m..Modfile).Toggles
					
					if Toggles and table.getsize(Toggles) > 0 then 
						New_Toggles = Toggles 
					end
				end
				
				if file == 'tooltips' then 
					local Tooltips = import(m..Modfile).Tooltips
					
					if Tooltips and table.getsize(Tooltips) > 0 then 
						New_Tooltips = Tooltips 
					end
				end
				
				if file == 'multi' then 
					local mfds = import(m..Modfile).mfd
					
					if mfds and table.getsize(mfds) > 0 then 
						New_Mfds = mfds 
					end
				end
				
				if file == 'modinfo' then 
					local info = import(m..Modfile)
					
					if info.uid and info.name == 'Domino Mod Support' then 
						MODUID = info.uid 
					end
				end
			end
		end
		
		if New_Abilities then 
			Add_New_Abilities(New_Abilities)
		end
		
		if New_Descriptions then 
			Add_New_Descriptions(New_Descriptions)
		end

		if New_Slots then 
			Add_New_Slots(New_Slots)
		end

		if New_Layouts then 
			Add_New_Layouts(New_Layouts)
		end
		
		if New_Locs then 
			Add_New_Locs(New_Locs)
		end
		
		if New_Skins then 
			Add_New_Skins(New_Skins)
		end
			
		if New_Toggles then 
			Add_New_Toggles(New_Toggles)
		end

		if New_Tooltips then 
			Add_New_Tooltips(New_Tooltips)
		end	

		if New_Mfds then 
			Add_New_Mfds(New_Mfds)
		end		
		
	end
end

function Populate_Textures()

	local gsub = string.gsub
	local lower = string.lower

	for i,m in __DMod_ModLocations do
        for k,file in DiskFindFiles(m .. '/textures', '*.dds') do
				
		local filename = Basename(file,true)	
				
		local Path = lower(file)
		Path = gsub(Path, ".*/uef/", "")
		Path = gsub(Path, ".*/cybran/", "")
		Path = gsub(Path, ".*/seraphim/", "")
		Path = gsub(Path, ".*/aeon/", "")
		Path = gsub(Path, ".*/common/", "")
		Path = gsub(Path, ".*/frontend/", "")
		Path = gsub(Path, ".*/textures/", "")
		
		__DModFileNamePath[filename] = {filepath=file, alerted = false}
		__DModTextures[Path] = {filepath=file}
        end
    end
	--LOG('Texture -->', repr(__DModTextures))
end

function Populate_Videos()

	local gsub = string.gsub
	local lower = string.lower

	for i,m in __DMod_ModLocations do
        for k,file in DiskFindFiles(m .. '/videos', '*.sfd') do
				
			filename = lower(file)
			filename = gsub(filename, ".*/videos", "")
						
			--filename = gsub(filename, ".*/uef/", "")
			--filename = gsub(filename, ".*/cybran/", "")
			--filename = gsub(filename, ".*/seraphim/", "")
			--filename = gsub(filename, ".*/aeon/", "")
			--filename = gsub(filename, ".*/common/", "")
		
			if not __DModVideoPaths[filename] then 
				__DModVideoPaths[filename] = {filepath=file}
			end
        end
    end
	--LOG('Videos -->', repr(__DModVideoPaths))
end

function Populate_DefaultVideos()

	local paths = { 
					--Commander mfd videos
					['aeon_ual0001_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/aeon/aeon_ual0001_mfd.sfd",
					['cybran_url0001_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/cybran/cybran_url0001_mfd.sfd",
					['seraphim_xsl0001_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/seraphim/seraphim_xsl0001_mfd.sfd",
					['uef_uel0001_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/uef/uef_uel0001_mfd.sfd",
	
					--Faction default mfd videos.
					['aeon_default_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/aeon/aeon_default_mfd.sfd",
					['cybran_default_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/cybran/cybran_default_mfd.sfd",
					['seraphim_default_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/seraphim/seraphim_default_mfd.sfd",
					['uef_default_mfd.sfd'] = "/mods/domino_mod_support/videos/mfd/uef/uef_default_mfd.sfd",
	}
	
	for key, path in paths do
		if not __DModVideoPaths[key] then 
			--table.insert(__DModVideoPaths, key )
			__DModVideoPaths[key] = { filepath = path }
		end
	end
end

function Populate_DefaultSlotNames()
	__DMod_SlotNames.Back = true
	__DMod_SlotNames.RCH = true
	__DMod_SlotNames.LCH = true
end

--Probably dont want modders to overwrite these values... ill think about adding support to change them here.. until then they can stay like this..
--IMPORTANT NOTE DO NOT CHANGE ANY OF THESE DEFAULT VALUES!!!
function Populate_TabFiles()

--Uef
--CONSTRUCTION, SELECTION SETS, ENHANCEMENT ICONS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TabFiles.uef_left_construction = '/game/construct-tab_top_btn/top_tab_btn_'
    __Dmod_TabFiles.uef_left_selection = '/game/construct-tab_top_btn/mid_tab_btn_'
    __Dmod_TabFiles.uef_left_enhancement = '/game/construct-tab_top_btn/bot_tab_btn_'
	
					--Right Layout
	__Dmod_TabFiles.uef_right_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.uef_right_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.uef_right_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	

					--Mini Layout
	__Dmod_TabFiles.uef_mini_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.uef_mini_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.uef_mini_enhancement = '/game/construct-tab_btn/bot_tab_btn_'
	
	
--Aeon
--CONSTRUCTION, SELECTION SETS, ENHANCEMENT ICONS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TabFiles.aeon_left_construction = '/game/construct-tab_top_btn/top_tab_btn_'
    __Dmod_TabFiles.aeon_left_selection = '/game/construct-tab_top_btn/mid_tab_btn_'
    __Dmod_TabFiles.aeon_left_enhancement = '/game/construct-tab_top_btn/bot_tab_btn_'
	
					--Right Layout
	__Dmod_TabFiles.aeon_right_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.aeon_right_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.aeon_right_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	

					--Mini Layout
	__Dmod_TabFiles.aeon_mini_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.aeon_mini_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.aeon_mini_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	
	

--Cybran
--CONSTRUCTION, SELECTION SETS, ENHANCEMENT ICONS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TabFiles.cybran_left_construction = '/game/construct-tab_top_btn/top_tab_btn_'
    __Dmod_TabFiles.cybran_left_selection = '/game/construct-tab_top_btn/mid_tab_btn_'
    __Dmod_TabFiles.cybran_left_enhancement = '/game/construct-tab_top_btn/bot_tab_btn_'
	
					--Right Layout
	__Dmod_TabFiles.cybran_right_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.cybran_right_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.cybran_right_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	

					--Mini Layout
	__Dmod_TabFiles.cybran_mini_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.cybran_mini_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.cybran_mini_enhancement = '/game/construct-tab_btn/bot_tab_btn_'
	

--Seraphim
--CONSTRUCTION, SELECTION SETS, ENHANCEMENT ICONS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TabFiles.seraphim_left_construction = '/game/construct-tab_top_btn/top_tab_btn_'
    __Dmod_TabFiles.seraphim_left_selection = '/game/construct-tab_top_btn/mid_tab_btn_'
    __Dmod_TabFiles.seraphim_left_enhancement = '/game/construct-tab_top_btn/bot_tab_btn_'
	
					--Right Layout
	__Dmod_TabFiles.seraphim_right_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.seraphim_right_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.seraphim_right_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	

					--Mini Layout
	__Dmod_TabFiles.seraphim_mini_construction = '/game/construct-tab_btn/top_tab_btn_'
	__Dmod_TabFiles.seraphim_mini_selection = '/game/construct-tab_btn/mid_tab_btn_'
	__Dmod_TabFiles.seraphim_mini_enhancement = '/game/construct-tab_btn/bot_tab_btn_'	
	
	--LOG('TabFiles -->', repr(__Dmod_TabFiles))
end

--IMPORTANT NOTE DO NOT CHANGE ANY OF THESE DEFAULT VALUES!!!
function Populate_TechFiles()
--UEF
--TECH LEVELS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TechFiles.uef_left_t1 = '/game/construct-tech_btn/t1_btn_'
	__Dmod_TechFiles.uef_left_t2 = '/game/construct-tech_btn/t2_btn_'
	__Dmod_TechFiles.uef_left_t3 = '/game/construct-tech_btn/t3_btn_'
	__Dmod_TechFiles.uef_left_t4 = '/game/construct-tech_btn/t4_btn_'
	
					--Right Layout
	__Dmod_TechFiles.uef_right_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.uef_right_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.uef_right_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.uef_right_t4 = '/game/construct-tech_btn/t4_btn_'	

					--Mini Layout
	__Dmod_TechFiles.uef_mini_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.uef_mini_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.uef_mini_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.uef_mini_t4 = '/game/construct-tech_btn/t4_btn_'
	
--TEMPLATES	-------------------------------------------------------------------------------------------
	__Dmod_TechFiles.uef_left_templates = '/game/construct-tech_btn/template_btn_'
	__Dmod_TechFiles.uef_right_templates = '/game/construct-tech_btn/template_btn_'
    __Dmod_TechFiles.uef_mini_templates = '/game/construct-tech_btn/template_btn_'
	
--ENHANCEMENTS -------------------------------------------------------------------------------------------
						--Left Layout
    __Dmod_TechFiles.uef_left_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.uef_left_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.uef_left_Back = '/game/construct-tech_btn/m_upgrade_btn_'
	
						--Right Layout
    __Dmod_TechFiles.uef_right_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.uef_right_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.uef_right_Back = '/game/construct-tech_btn/m_upgrade_btn_'

						--Mini Layout
    __Dmod_TechFiles.uef_mini_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.uef_mini_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.uef_mini_Back = '/game/construct-tech_btn/m_upgrade_btn_'
	
	
--AEON
--TECH LEVELS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TechFiles.aeon_left_t1 = '/game/construct-tech_btn/t1_btn_'
	__Dmod_TechFiles.aeon_left_t2 = '/game/construct-tech_btn/t2_btn_'
	__Dmod_TechFiles.aeon_left_t3 = '/game/construct-tech_btn/t3_btn_'
	__Dmod_TechFiles.aeon_left_t4 = '/game/construct-tech_btn/t4_btn_'
	
					--Right Layout
	__Dmod_TechFiles.aeon_right_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.aeon_right_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.aeon_right_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.aeon_right_t4 = '/game/construct-tech_btn/t4_btn_'	

					--Mini Layout
	__Dmod_TechFiles.aeon_mini_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.aeon_mini_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.aeon_mini_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.aeon_mini_t4 = '/game/construct-tech_btn/t4_btn_'
	
--TEMPLATES	-------------------------------------------------------------------------------------------
	__Dmod_TechFiles.aeon_left_templates = '/game/construct-tech_btn/template_btn_'
	__Dmod_TechFiles.aeon_right_templates = '/game/construct-tech_btn/template_btn_'
    __Dmod_TechFiles.aeon_mini_templates = '/game/construct-tech_btn/template_btn_'
	
--ENHANCEMENTS -------------------------------------------------------------------------------------------
						--Left Layout
    __Dmod_TechFiles.aeon_left_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.aeon_left_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.aeon_left_Back = '/game/construct-tech_btn/m_upgrade_btn_'
	
						--Right Layout
    __Dmod_TechFiles.aeon_right_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.aeon_right_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.aeon_right_Back = '/game/construct-tech_btn/m_upgrade_btn_'

						--Mini Layout
    __Dmod_TechFiles.aeon_mini_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.aeon_mini_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.aeon_mini_Back = '/game/construct-tech_btn/m_upgrade_btn_'

	
--CYBRAN
--TECH LEVELS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TechFiles.cybran_left_t1 = '/game/construct-tech_btn/t1_btn_'
	__Dmod_TechFiles.cybran_left_t2 = '/game/construct-tech_btn/t2_btn_'
	__Dmod_TechFiles.cybran_left_t3 = '/game/construct-tech_btn/t3_btn_'
	__Dmod_TechFiles.cybran_left_t4 = '/game/construct-tech_btn/t4_btn_'
	
					--Right Layout
	__Dmod_TechFiles.cybran_right_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.cybran_right_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.cybran_right_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.cybran_right_t4 = '/game/construct-tech_btn/t4_btn_'	

					--Mini Layout
	__Dmod_TechFiles.cybran_mini_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.cybran_mini_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.cybran_mini_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.cybran_mini_t4 = '/game/construct-tech_btn/t4_btn_'
	
--TEMPLATES	-------------------------------------------------------------------------------------------
	__Dmod_TechFiles.cybran_left_templates = '/game/construct-tech_btn/template_btn_'
	__Dmod_TechFiles.cybran_right_templates = '/game/construct-tech_btn/template_btn_'
    __Dmod_TechFiles.cybran_mini_templates = '/game/construct-tech_btn/template_btn_'
	
--ENHANCEMENTS -------------------------------------------------------------------------------------------
						--Left Layout
    __Dmod_TechFiles.cybran_left_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.cybran_left_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.cybran_left_Back = '/game/construct-tech_btn/m_upgrade_btn_'

						--Right Layout
    __Dmod_TechFiles.cybran_right_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.cybran_right_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.cybran_right_Back = '/game/construct-tech_btn/m_upgrade_btn_'

						--Mini Layout
    __Dmod_TechFiles.cybran_mini_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.cybran_mini_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.cybran_mini_Back = '/game/construct-tech_btn/m_upgrade_btn_'


--SERAPHIM
--TECH LEVELS -------------------------------------------------------------------------------------------
					--Left Layout
	__Dmod_TechFiles.seraphim_left_t1 = '/game/construct-tech_btn/t1_btn_'
	__Dmod_TechFiles.seraphim_left_t2 = '/game/construct-tech_btn/t2_btn_'
	__Dmod_TechFiles.seraphim_left_t3 = '/game/construct-tech_btn/t3_btn_'
	__Dmod_TechFiles.seraphim_left_t4 = '/game/construct-tech_btn/t4_btn_'
	
					--Right Layout
	__Dmod_TechFiles.seraphim_right_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.seraphim_right_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.seraphim_right_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.seraphim_right_t4 = '/game/construct-tech_btn/t4_btn_'	

					--Mini Layout
	__Dmod_TechFiles.seraphim_mini_t1 = '/game/construct-tech_btn/t1_btn_'
    __Dmod_TechFiles.seraphim_mini_t2 = '/game/construct-tech_btn/t2_btn_'
    __Dmod_TechFiles.seraphim_mini_t3 = '/game/construct-tech_btn/t3_btn_'
    __Dmod_TechFiles.seraphim_mini_t4 = '/game/construct-tech_btn/t4_btn_'
	
--TEMPLATES	-------------------------------------------------------------------------------------------
	__Dmod_TechFiles.seraphim_left_templates = '/game/construct-tech_btn/template_btn_'
	__Dmod_TechFiles.seraphim_right_templates = '/game/construct-tech_btn/template_btn_'
    __Dmod_TechFiles.seraphim_mini_templates = '/game/construct-tech_btn/template_btn_'
	
--ENHANCEMENTS -------------------------------------------------------------------------------------------
						--Left Layout
    __Dmod_TechFiles.seraphim_left_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.seraphim_left_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.seraphim_left_Back = '/game/construct-tech_btn/m_upgrade_btn_'
	
						--Right Layout
    __Dmod_TechFiles.seraphim_right_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.seraphim_right_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.seraphim_right_Back = '/game/construct-tech_btn/m_upgrade_btn_'

						--Mini Layout
    __Dmod_TechFiles.seraphim_mini_LCH = '/game/construct-tech_btn/left_upgrade_btn_'
    __Dmod_TechFiles.seraphim_mini_RCH = '/game/construct-tech_btn/r_upgrade_btn_'
    __Dmod_TechFiles.seraphim_mini_Back = '/game/construct-tech_btn/m_upgrade_btn_'
		
	--LOG('TechFiles -->', repr(__Dmod_TechFiles))
end

function populate_ConstructionTabs()

	table.insert(__Dmod_ConstructionTabs, 't1')
	table.insert(__Dmod_ConstructionTabs, 't2')
	table.insert(__Dmod_ConstructionTabs, 't3')
	table.insert(__Dmod_ConstructionTabs, 't4')
	table.insert(__Dmod_ConstructionTabs, 'templates')

	--LOG('Constructiontabs -->', repr(__Dmod_ConstructionTabs))
end

--Tabs tables ends -----------------------------------------------------------------------

--ENHANCEMENTS -----------------------------------------------------------------------

function Populate_EnhancementPrefixes()

-- IMPORTANT DO NOT REMOVE THESE 3 VALUES
	__DMod_EnhancementPrefixes.Back = 'b-'
	__DMod_EnhancementPrefixes.LCH = 'la-'
	__DMod_EnhancementPrefixes.RCH = 'ra-'
------------------------------------------	
	
	--LOG('EnhancementPrefixes -->', repr(__DMod_EnhancementPrefixes))

end

function Populate_DefaultTabOrder()

-- IMPORTANT DO NOT REMOVE THESE 3 VALUES


	__DMod_DefaultTabOrder.Back = 1
	__DMod_DefaultTabOrder.LCH = 2
	__DMod_DefaultTabOrder.RCH = 3
		
------------------------------------------		

	--LOG('DefaultTabOrder --> ' .. repr(__DMod_defaultTabOrder))
end

function Populate_SlotToIconName()

-- IMPORTANT DO NOT REMOVE THESE 3 VALUES
	__DMod_SlotToIconName.RCH = 'ra-'
	__DMod_SlotToIconName.LCH = 'la-'
	__DMod_SlotToIconName.Back = 'b-'
------------------------------------------	
	
	--LOG('SlotToIconName -->', repr(__DMod_SlotToIconName))
end

function Populate_EnhancementTooltips() --mouse over tooltips

-- IMPORTANT DO NOT REMOVE THESE 3 VALUES
	__DMod_EnhancementTooltips.LCH = 'construction_tab_enhancment_left'
    __DMod_EnhancementTooltips.RCH = 'construction_tab_enhancment_right'
    __DMod_EnhancementTooltips.Back = 'construction_tab_enhancment_back'
------------------------------------------		
	
	--LOG('EnhancementTooltips -->', repr(__DMod_Enhancement_Tooltips))
end

function Populate_EnhancementSlotNames() --LOC info for unitview detail slotname
-- IMPORTANT DO NOT REMOVE THESE 3 VALUES
	__DMod_EnhancementSlotNames.back = '<LOC uvd_0007>Back'
	__DMod_EnhancementSlotNames.lch = '<LOC uvd_0008>LCH'
	__DMod_EnhancementSlotNames.rch = '<LOC uvd_0009>RCH'
------------------------------------------		
	--LOG('EnhancementSlotNames -->', repr(__DMod_EnhancementSlotNames))
end

--Enhancement tables ends -----------------------------------------------------------------------

--MISC TABLES -----------------------------------------------------------------------

--Added this for when i complete the tech slots
function populate_NestedTabKey()
	__DMod_NestedTabKey.t1 = 'construction'
    __DMod_NestedTabKey.t2 = 'construction'
    __DMod_NestedTabKey.t3 = 'construction'
    __DMod_NestedTabKey.t4 = 'construction'
	
	--LOG('NestedTabKey -->', repr(__DMod_NestedTabKey))	
end

function Populate_Custom_Tooltips()
	

end

-- this is where the alternate loc info is stored anything in this function is added to the table
-- First and will not be replaced
function Populate_LocLookUp() 


end

function Populate_Custom_UnitDescriptions()


end

function Populate_ActiveModLocations()
	for i, mod in __active_mods do
		if mod.uid and not __DMod_ModLocations[mod.uid] then
			if mod.location then 
				__DMod_ModLocations[mod.uid] = mod.location
			end
		end
	end
	
	--LOG('Active mods --> ' .. repr(__DMod_ModLocations))
end

function Populate_Custom_LayoutNames()
	
	--Add the default layouts.. 
	__DMod_Custom_LayoutNames = { "bottom", "left", "right", }
	
end

function Populate_Custom_Skins()
	
	
end

function Populate_Custom_Mfd()
	
	
end

--Misc tables ends -----------------------------------------------------------------------

--Functions 

--Thanks to manimal for this function
-- we can use this function if we want to however, ive provided a much faster method via the GetModLocation(UID) function.
local ModsAlreadyFound = {}

function GetActiveModLocation(mod_Id)
    --# Perform a safety test first
    if type(mod_Id) ~= 'string' then 
        WARN("MANIMAL's MOD LOCATOR : Expected string argument but received " .. type(mod_Id))
        return nil
    end
    --# If the search wasn't done already...
    if not ModsAlreadyFound[mod_Id] then 
        --# Search list of active mods...
        for i, mod in __active_mods do
            if mod_Id == mod.uid then
                ModsAlreadyFound[mod_Id] = mod.location
                --LOG("MANIMAL's MOD LOCATOR :  Active Mod Found (name="..(mod.name or 'unknown')..", UID="..(mod.uid or 'none')..", location = "..mod.location..")  .")
                return mod.location
            end
        end
        --# If we got here then mod wasn't active.
        --# Use the empty string in cache list to
        --# indicate search was done but mod not active.
        ModsAlreadyFound[mod_Id] = ""
        --# Signal Failure to calling code
        LOG("MANIMAL's MOD LOCATOR:  No mod active with UID=" .. repr(mod_Id))
    end
    --# If we are here, the search was done.
    --# Respond accordingly to whatever is in search result cache.
    if ModsAlreadyFound[mod_Id] == "" then return nil 
    else return ModsAlreadyFound[mod_Id] 
    end
end

function DMod_Path()
	--local DMSIUID = '244DE2D2-6510-11DF-A8EC-B40BDFD72085'
	local DMSIUID = MODUID
	local Modpath = __DMod_ModLocations[DMSIUID]

	if Modpath then 
		return Modpath
	else
		return nil
	end
end

function GetModLocation(uid)
	if type(uid) ~= 'string' then 
        WARN("Domino's MOD LOCATOR : Expected string argument but received " .. type(uid))
        return nil
    end
	
	if not __DMod_ModLocations[uid] then 
		return nil
	else 
		return __DMod_ModLocations[uid]
	end
end

---------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
function Add_EnhancementIcons(SlotName, Icon)	
	__Dmod_TechFiles['uef_left_' .. SlotName] = Icon
	__Dmod_TechFiles['uef_right_' .. SlotName] = Icon
	__Dmod_TechFiles['uef_mini_' .. SlotName] = Icon 
			
	__Dmod_TechFiles['aeon_left_' .. SlotName] = Icon
	__Dmod_TechFiles['aeon_right_' .. SlotName] = Icon
	__Dmod_TechFiles['aeon_mini_' .. SlotName] = Icon
			
	__Dmod_TechFiles['cybran_left_' .. SlotName] = Icon
	__Dmod_TechFiles['cybran_right_' .. SlotName] = Icon
	__Dmod_TechFiles['cybran_mini_' .. SlotName] = Icon
			
	__Dmod_TechFiles['seraphim_left_' .. SlotName] = Icon
	__Dmod_TechFiles['seraphim_right_' .. SlotName] = Icon
	__Dmod_TechFiles['seraphim_mini_' .. SlotName] = Icon
end

function Add_New_Abilities(New_Abilities)
	if not New_Abilities then return nil end
	
	for Abilitie, Params in New_Abilities do
		if __DMod_Custom_Abilities[Abilitie] then
			LOG('DMOD --> an abilitie entry already exists by the name of ' .. Abilitie)
		else
			__DMod_Custom_Abilities[Abilitie] = Params
		end
	end
end

function Add_New_Descriptions(New_Descriptions)

	if not New_Descriptions then return nil end
	
	for id, Description in New_Descriptions do
			
		local Key = id
		local Description = Description
		
		if __DMod_Custom_Descriptions[Key] then
			LOG('DMOD --> a description entry already exists by the name of ' .. Key)
		else
			__DMod_Custom_Descriptions[Key] = Description 
		end
	end
end

function Add_New_Slots(New_Slots)
	for id, Settings in New_Slots do
		local SlotName = id
		local Params = Settings
		local ValidSlot = true
								
		if __DMod_SlotNames[SlotName] then 
			LOG('DMOD --> Enhancement Slot Already defined ' .. SlotName)
			ValidSlot = false
		end
		
		if ValidSlot then 
			local DefaultTooltip = 'construction_tab_enhancement_' .. SlotName
			local ToolTip_table = { }
			
			__DMod_EnhancementPrefixes[SlotName] = SlotName
			__DMod_SlotToIconName[SlotName] = SlotName
			
			local incr = tonumber(table.getsize(__DMod_DefaultTabOrder)) + 1
			__DMod_DefaultTabOrder[SlotName] = incr

			
			local Icon = Params.Icon
			Add_EnhancementIcons(SlotName, Icon)
			
			__DMod_EnhancementTooltips[SlotName] = DefaultTooltip
			
			__DMod_EnhancementSlotNames[SlotName] = SlotName
			
			__DMod_Custom_Tooltips[DefaultTooltip] = { title = '<LOC _'..SlotName ..'>', description = '', }

			if Params.Tooltip then 
				LOG("*AI DEBUG Language is "..repr(__language))
				__DMod_LocLookUp["US"]['_'..SlotName] = Params.Tooltip
			else
				__DMod_LocLookUp["US"]['_'..SlotName] = 'No Tooltip Defined'
			end

			
			__DMod_SlotNames[SlotName] = true	
		end
	end
end

function Add_New_Layouts(New_Layouts)
	if not New_Layouts then return nil end
	
	for LayOutName, Params in New_Layouts do
		if __DMod_Custom_Layouts[LayOutName] then
			LOG('DMOD --> a layout entry already exists by the name of ' .. LayOutName)
		else
			__DMod_Custom_Layouts[LayOutName] = Params
		end
	end
end

function Add_New_Locs(New_Locs)

	if not New_Locs then return nil end

	for language, entries in New_Locs do
		if table.getsize(entries) > 0 then 
			for entry, text in entries do
				local Key = entry
				local Loc = text
				
				if __DMod_LocLookUp[language][Key] then
					WARN('DMOD --> a LOC entry already exists by the name of ' .. Key)
				else
					__DMod_LocLookUp[language][Key] = Loc 
				end
			end
		end
	end
end

function Add_New_Skins(New_Skins)
	if not New_Skins then return nil end
		
	for SkinName, Params in New_Skins do
		if Params.layouts then 
		
			local t = table.deepcopy(__DMod_Custom_LayoutNames)

			for key, val in Params.layouts or {} do
				table.insert(t, val)
			end

			__DMod_Custom_LayoutNames = t
		end
						
		if table.getsize(__DMod_Custom_LayoutNames) > 0 then 
			Params.layouts = __DMod_Custom_LayoutNames
		end
								
		__DMod_Custom_Skins[SkinName] = table.merged(__DMod_Custom_Skins[SkinName], Params)
	end
end

function Add_New_Toggles(New_Toggles)

	if not New_Toggles then return nil end

	for ToggleName, Param in New_Toggles do
				
		local preferredSlot = Param.preferredSlot or false
		local state = Param.initialState
		local pulse = Param.pulse
					
		if preferredSlot and preferredSlot <= 18 then 
			preferredSlot = Param.preferredSlot
		else
			preferredSlot = 7
		end
				
		if state == nil then 
			state = false
		end	
		
		if pulse == nil then 
			pulse = false
		end
		
		if pulse then 
			state = false
		end
				
		local Key = ToggleName
		local Params = {
						toggle_name = ToggleName, 
						initialState = state,
						helpText = Param.helpText, 
						bitmapId = Param.bitmapId, 
						preferredSlot = preferredSlot, 
						behavior = false, 
						initialStateFunc = false,
						pulse = pulse,
		}
				
		if __DMod_Custom_Toggles[Key] then 
			LOG('DMOD --> A Toggle Cap already exists by the name of ' .. Key)
		else
			__DMod_Custom_Toggles[Key] = Params
		end
	end
	
	__DMod_Custom_Toggles = table.sorted(__DMod_Custom_Toggles)
end

function Add_New_Tooltips(New_Tooltips)

	if not New_Tooltips then return nil end

	for i, Params in New_Tooltips do
		local Name = i
		local title = Params.title
		local description = Params.description
		
		if not description then 
			description = ''
		end
		
		if __DMod_Custom_Tooltips[Name] then
			LOG('DMOD --> a tooltip entry already exists by the name of ' .. Name)
		else
			local ToolTip = { title = title,  description = description }
			__DMod_Custom_Tooltips[Name] = ToolTip 
		end
	end
end

function Add_New_Mfds(New_Mfds)
	
	if not New_Mfds then return nil end
	
	for i, Params in New_Mfds do
		local name = i
		local vid = false
		local cue = false
		local bank = false
		local text = false
		local faction = false
		local lengh = false
		
		if Params.vid then 
			vid = Params.vid
		end
		
		if Params.cue then 
			cue = Params.cue
		end
		
		if Params.bank then
			bank = Params.bank
		end
		
		if Params.text then 
			text = '<LOC '..Params.text..'>'
		end
		
		if Params.faction then
			faction = Params.faction
		end
		
		if Params.lengh then
			lengh = Params.lengh
		end
				
		if __DMod_Custom_Mfd[name] then
			LOG('DMOD --> a Mfd video entry already exists by the name of ' .. name)
		else
			local Mfd_Vid = { vid = vid, cue = cue, bank = bank, text = text, faction = faction, lengh = lengh }
			__DMod_Custom_Mfd[name] = Mfd_Vid 
		end
	end
end

function BadTextures()
	return __DModBadTextures
end

function AddBadTexture(key, param)
	if key and param then 
		__DModBadTextures[key] = param
	end
end

function AddTexture(key, param)
	if key and param then 
		local gsub = string.gsub
		local lower = string.lower

		local filename = Basename(key,true)	
				
		local Path = lower(key)
		Path = gsub(Path, ".*/uef/", "")
		Path = gsub(Path, ".*/cybran/", "")
		Path = gsub(Path, ".*/seraphim/", "")
		Path = gsub(Path, ".*/aeon/", "")
		Path = gsub(Path, ".*/common/", "")
		Path = gsub(Path, ".*/frontend/", "")
		Path = gsub(Path, ".*/textures/", "")
		
		if not __DModFileNamePath[filename] then 
			__DModFileNamePath[filename] = {filepath=param, alerted = false}
		end
		
		__DModTextures[Path] = {filepath=param}
	end
end

function Custom_Toggles()
	return __DMod_Custom_Toggles
end

function Custom_Mfd()
	return __DMod_Custom_Mfd
end


